// <auto-generated />
using System;
using Infrastructure.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Infrastructure.Migrations
{
    [DbContext(typeof(ContextBase))]
    partial class ContextBaseModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("Domain.Model.Example", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("datetime");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(60)
                        .HasColumnType("varchar(60)");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime");

                    b.HasKey("Id");

                    b.ToTable("Examples");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedAt = new DateTime(2022, 2, 22, 16, 18, 25, 360, DateTimeKind.Utc).AddTicks(556),
                            Name = "example 1",
                            UpdatedAt = new DateTime(2022, 2, 22, 16, 18, 25, 360, DateTimeKind.Utc).AddTicks(556)
                        },
                        new
                        {
                            Id = 2,
                            CreatedAt = new DateTime(2022, 2, 22, 16, 18, 25, 360, DateTimeKind.Utc).AddTicks(557),
                            Name = "example 2",
                            UpdatedAt = new DateTime(2022, 2, 22, 16, 18, 25, 360, DateTimeKind.Utc).AddTicks(557)
                        });
                });

            modelBuilder.Entity("Domain.Model.User", b =>
                {
                    b.Property<Guid>("Uid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<string>("ChangedEmail")
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("datetime");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("EmailToken")
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)");

                    b.Property<string>("FullName")
                        .IsRequired()
                        .HasMaxLength(130)
                        .HasColumnType("varchar(130)");

                    b.Property<DateTime>("LastAccess")
                        .HasColumnType("datetime");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)");

                    b.Property<string>("RefreshToken")
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)");

                    b.Property<DateTime?>("RefreshTokenExpiryTime")
                        .HasColumnType("datetime");

                    b.Property<string>("Role")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("varchar(95)")
                        .HasDefaultValue("Cliente");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20)");

                    b.HasKey("Uid");

                    b.HasIndex("Email")
                        .IsUnique();

                    b.HasIndex("Role");

                    b.HasIndex("UserName")
                        .IsUnique();

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Uid = new Guid("7e085fa2-3726-4f90-a72e-7062e99d4e27"),
                            CreatedAt = new DateTime(2022, 2, 22, 16, 18, 25, 360, DateTimeKind.Utc).AddTicks(534),
                            Email = "admin@teste.com",
                            EmailConfirmed = true,
                            FullName = "Admin da Silva",
                            LastAccess = new DateTime(2022, 2, 22, 16, 18, 25, 360, DateTimeKind.Utc).AddTicks(533),
                            Password = "24-0B-E5-18-FA-BD-27-24-DD-B6-F0-4E-EB-1D-A5-96-74-48-D7-E8-31-C0-8C-8F-A8-22-80-9F-74-C7-20-A9",
                            Role = "Admin",
                            UpdatedAt = new DateTime(2022, 2, 22, 16, 18, 25, 360, DateTimeKind.Utc).AddTicks(537),
                            UserName = "Admin"
                        },
                        new
                        {
                            Uid = new Guid("34c619e1-efeb-4e39-be1b-73f58a3bc443"),
                            CreatedAt = new DateTime(2022, 2, 22, 16, 18, 25, 360, DateTimeKind.Utc).AddTicks(540),
                            Email = "cliente@teste.com",
                            EmailConfirmed = true,
                            FullName = "Cliente",
                            LastAccess = new DateTime(2022, 2, 22, 16, 18, 25, 360, DateTimeKind.Utc).AddTicks(540),
                            Password = "24-0B-E5-18-FA-BD-27-24-DD-B6-F0-4E-EB-1D-A5-96-74-48-D7-E8-31-C0-8C-8F-A8-22-80-9F-74-C7-20-A9",
                            Role = "Cliente",
                            UpdatedAt = new DateTime(2022, 2, 22, 16, 18, 25, 360, DateTimeKind.Utc).AddTicks(541),
                            UserName = "cliente"
                        },
                        new
                        {
                            Uid = new Guid("14f091bc-cdb7-494a-bf4c-1f23da9244e5"),
                            CreatedAt = new DateTime(2022, 2, 22, 16, 18, 25, 360, DateTimeKind.Utc).AddTicks(542),
                            Email = "tecnico@teste.com",
                            EmailConfirmed = true,
                            FullName = "Tecnico",
                            LastAccess = new DateTime(2022, 2, 22, 16, 18, 25, 360, DateTimeKind.Utc).AddTicks(542),
                            Password = "24-0B-E5-18-FA-BD-27-24-DD-B6-F0-4E-EB-1D-A5-96-74-48-D7-E8-31-C0-8C-8F-A8-22-80-9F-74-C7-20-A9",
                            Role = "Tecnico",
                            UpdatedAt = new DateTime(2022, 2, 22, 16, 18, 25, 360, DateTimeKind.Utc).AddTicks(542),
                            UserName = "tecnico"
                        });
                });

            modelBuilder.Entity("Domain.Model.UserRole", b =>
                {
                    b.Property<string>("Name")
                        .HasColumnType("varchar(95)");

                    b.HasKey("Name");

                    b.HasIndex("Name")
                        .IsUnique();

                    b.ToTable("UserRoles");

                    b.HasData(
                        new
                        {
                            Name = "Cliente"
                        },
                        new
                        {
                            Name = "Tecnico"
                        },
                        new
                        {
                            Name = "Admin"
                        });
                });

            modelBuilder.Entity("Domain.Model.User", b =>
                {
                    b.HasOne("Domain.Model.UserRole", "UserRole")
                        .WithMany("Users")
                        .HasForeignKey("Role");

                    b.Navigation("UserRole");
                });

            modelBuilder.Entity("Domain.Model.UserRole", b =>
                {
                    b.Navigation("Users");
                });
#pragma warning restore 612, 618
        }
    }
}
